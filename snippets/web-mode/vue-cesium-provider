# -*- mode: snippet -*-
# name: vue-cesium-provider
# key: cprovider
# --
<template><div v-if="false" /></template>
<script setup>
import { inject, provide, onBeforeUnmount, onMounted } from 'vue'
import { log } from 'shared-utils'
import { VectorTileImageryProvider } from 'cesium'

const props = defineProps({
  options: {
    type: Object,
    default: () => ({}),
  },
  url: {
    type: String,
    required: true
  },
})

const viewer = inject('viewer')
let provider
let layer

onMounted(() => {
  provider = new VectorTileImageryProvider({
    ...props
  })
  layer = viewer.imageryLayers.addImageryProvider(provider)

  provide('layer', layer)
  provide('provider', provider)

  log.cb(`${1:`(file-name-nondirectory (buffer-file-name))`} mounted`).end()
})

defineExpose({
  provider,
})

onBeforeUnmount(() => {
  if (viewer.imageryLayers.contains(layer)) {
    viewer.imageryLayers.remove(layer)
    log.c('${1:`(file-name-nondirectory (buffer-file-name))`} unmounted').end()
  }
})
</script>
